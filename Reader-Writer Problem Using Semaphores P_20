#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

int data = 0;                  
int readCount = 0;             
sem_t rw_mutex;                
sem_t mutex;                 

void* reader(void* arg) {
    int f = *((int*)arg);
    sem_wait(&mutex);
    readCount++;
    if (readCount == 1)
        sem_wait(&rw_mutex);   
    sem_post(&mutex);

    printf("Reader %d is reading data = %d\n", f, data);
    sleep(1);                
    sem_wait(&mutex);
    readCount--;
    if (readCount == 0)
        sem_post(&rw_mutex); 
    sem_post(&mutex);
    return NULL;
}

void* writer(void* arg) {
    int f = *((int*)arg);
    sem_wait(&rw_mutex);       
    data += 10;
    printf("Writer %d modified data to %d\n", f, data);
    sleep(2);                   
    sem_post(&rw_mutex);       
    return NULL;
}

int main() {
    pthread_t r[5], w[5];
    sem_init(&rw_mutex, 0, 1);
    sem_init(&mutex, 0, 1);

    int a[5] = {1, 2, 3, 4, 5};

    for (int i = 0; i < 2; i++)
        pthread_create(&w[i], NULL, writer, (void*)&a[i]);

    for (int i = 0; i < 3; i++)
        pthread_create(&r[i], NULL, reader, (void*)&a[i]);

    for (int i = 0; i < 2; i++)
        pthread_join(w[i], NULL);

    for (int i = 0; i < 3; i++)
        pthread_join(r[i], NULL);

    sem_destroy(&rw_mutex);
    sem_destroy(&mutex);

    return 0;
}


OUTPUT : 
Writer 1 modified data to 10
Writer 2 modified data to 20
Reader 1 is reading data = 20
Reader 2 is reading data = 20
Reader 3 is reading data = 20

 
